name: android-static

on:
  push:
    branches:
      - android-static
  workflow_dispatch:
    inputs:
      version:
        description: "Version information (e.g., 1.20.2)"
        required: true

permissions:
  contents: write

env:
  ONNXRUNTIME_VERSION:
    |- # Enter release tag name or version name in workflow_dispatch. Appropriate version if not specified
    ${{ github.event.release.tag_name || github.event.inputs.version || '1.20.2' }}

jobs:
  android-static:
    name: android static lib ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [arm64-v8a, armeabi-v7a, x86, x86_64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # https://github.com/actions/setup-java
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '21'

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: android-static-${{ env.ONNXRUNTIME_VERSION }}-${{ matrix.arch }}

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26
          add-to-path: true

      - name: Display NDK HOME
        shell: bash
        run: |
          echo "ANDROID_NDK_LATEST_HOME: ${ANDROID_NDK_LATEST_HOME}"
          ls -lh ${ANDROID_NDK_LATEST_HOME}

          export ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}
          echo "ANDROID_NDK_HOME: $ANDROID_NDK_HOME"
          echo "ANDROID_NDK: $ANDROID_NDK"

      - name: Update ONNX Runtime
        if: steps.cache-build-result.outputs.cache-hit != 'true'
        run: |
          echo $ONNXRUNTIME_VERSION > ONNXRUNTIME_VERSION
          git submodule update --init --depth=1 onnxruntime
          cd onnxruntime
          git fetch origin tag v$ONNXRUNTIME_VERSION
          git checkout v$ONNXRUNTIME_VERSION

      - name: Download protoc
        if: steps.cache-build-result.outputs.cache-hit != 'true'
        shell: bash
        run: |
          # see ./cmake/deps.txt
          if [[ ${{ env.ONNXRUNTIME_VERSION }} =~ 1.14.[0-9] ]]; then
            wget https://github.com/protocolbuffers/protobuf/releases/download/v3.20.3/protoc-3.20.3-linux-x86_64.zip
            unzip protoc-3.20.3-linux-x86_64.zip
          elif [[ ${{ env.ONNXRUNTIME_VERSION }} =~ 1.1[56789].[0-9] || ${{ env.ONNXRUNTIME_VERSION }} =~ 1.20.[0-9] ]]; then
            wget https://github.com/protocolbuffers/protobuf/releases/download/v21.12/protoc-21.12-linux-x86_64.zip
            unzip protoc-21.12-linux-x86_64.zip
          else
            echo "Unsupported version ${{ env.ONNXRUNTIME_VERSION }}"
            exit 1
          fi

          ./bin/protoc --version

      - name: Set environment variable
        if: steps.cache-build-result.outputs.cache-hit != 'true'
        shell: bash
        run: |
          echo "$GITHUB_WORKSPACE/bin"  >> "$GITHUB_PATH"

      - name: Display protoc info for ${{ env.ONNXRUNTIME_VERSION }}
        if: steps.cache-build-result.outputs.cache-hit != 'true'
        shell: bash
        run: |
          protoc --version

      - name: Show current directory
        shell: bash
        run: |
          ls -lh
          echo $PWD

      - name: Install dependencies
        if: steps.cache-build-result.outputs.cache-hit != 'true'
        shell: bash
        run: |
          python3 -m pip install cmake
          cmake --version

      - name: Build onnxruntime for android ${{ matrix.arch}}
        shell: bash
        run: |
          export CMAKE_CXX_COMPILER_LAUNCHER=ccache
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          cmake --version
      
          export ANDROID_NDK_HOME=${{ steps.setup-ndk.outputs.ndk-path }}
          export ANDROID_NDK=${{ steps.setup-ndk.outputs.ndk-path }}
      
          arch=${{ matrix.arch }}
      
          export CMAKE_OPTIONS="--compile-no-warning-as-error \
            -Donnxruntime_BUILD_UNIT_TESTS=OFF \
            -DONNX_CUSTOM_PROTOC_EXECUTABLE=$GITHUB_WORKSPACE/bin/protoc \
            -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK_HOME}/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=$arch \
            -DANDROID_PLATFORM=android-24 \
            -DANDROID_STL=c++_shared \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON"
      
          ./build-static_lib.sh

      - name: Collect result ${{ matrix.arch }}
        shell: bash
        run: |
          ls -lh output/static_lib/
          ls -lh output/static_lib/include
          ls -lh output/static_lib/lib

          dst=onnxruntime-android-${{ matrix.arch }}-static_lib-${{ env.ONNXRUNTIME_VERSION }}
          mkdir $dst

          mv -v output/static_lib/* $dst

          zip -r ${dst}.zip $dst/

      - uses: actions/upload-artifact@v4
        with:
          name: sherpa-onnx-android-${{ matrix.arch }}
          path: ./onnxruntime*.zip


